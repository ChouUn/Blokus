import json

Chess = [
    [(0,0)],
    [(4,0),(3,0)],
    [(0,4),(1,4),(0,3)],
    [(4,0),(3,0),(2,0)],
    [(0,0),(0,1),(1,0),(1,1)],
    [(0,0),(0,1),(0,2),(1,1)],
    [(0,0),(0,1),(0,2),(0,3)],
    [(0,4),(1,4),(2,4),(0,3)],
    [(0,0),(0,1),(1,1),(1,2)],
    [(4,0),(3,0),(2,0),(1,0),(4,1)],
    [(4,4),(4,3),(4,2),(3,3),(2,3)],
    [(4,4),(4,3),(4,2),(3,4),(2,4)],
    [(4,4),(3,4),(2,4),(2,3),(1,3)],
    [(4,4),(4,3),(3,3),(2,3),(2,2)],
    [(0,0),(0,1),(0,2),(0,3),(0,4)],
    [(0,4),(0,3),(0,2),(1,4),(1,3)],
    [(0,4),(1,4),(1,3),(2,3),(2,2)],
    [(0,4),(1,4),(2,4),(0,3),(2,3)],
    [(0,0),(0,1),(1,1),(1,2),(2,1)],
    [(1,0),(1,1),(1,2),(0,1),(2,1)],
    [(0,4),(0,3),(0,2),(0,1),(1,3)]
];

def toCell(Sta):
    if Sta["id"] == -1:
        return list();
    sta = 0;
    chs = Chess[int(Sta["id"])];
    if(Sta["sta"] & 1):
        chs = map(lambda (x,y) : (x,4-y),chs);
        sta ^= 1;
    while(sta != Sta["sta"]):
        chs = map(lambda (x,y) : (y,4-x),chs);
        sta = (sta + (6 if 1 == (sta & 1) else 2)) % 8;

    chs = map(lambda (x,y) : (Sta["o"],x + Sta["x"],y + Sta["y"]) ,chs)
    print json.dumps(Sta);
    print str(chs);
    return chs;

tes = '[{"sta": 4, "o": 0, "remain": [239.20899987220764, 240, 240, 240], "y": 0, "x": 0, "id": "11"}, {"sta": 6, "o": 1, "remain": [239.20899987220764, 240, 240, 240], "y": 15, "x": 0, "id": "11"}, {"sta": 0, "o": 2, "remain": [239.20899987220764, 240, 240, 240], "y": 15, "x": 15, "id": "11"}, {"sta": 2, "o": 3, "remain": [239.20899987220764, 240, 240, 240], "y": 0, "x": 15, "id": "11"}, {"sta": 0, "o": 0, "remain": [239.20899987220764, 240, 240, 240], "y": -1, "x": 1, "id": "16"}, {"sta": 2, "o": 1, "remain": [239.20899987220764, 240, 240, 240], "y": 12, "x": 0, "id": 20}, {"sta": 2, "o": 2, "remain": [239.20899987220764, 240, 240, 240], "y": 14, "x": 12, "id": 20}, {"sta": 2, "o": 3, "remain": [239.20899987220764, 240, 240, 240], "y": -3, "x": 12, "id": 20}, {"sta": 2, "o": 0, "remain": [239.20899987220764, 240, 240, 240], "y": 1, "x": 0, "id": 20}, {"sta": 2, "o": 1, "remain": [239.20899987220764, 240, 240, 240], "y": 10, "x": 1, "id": 19}, {"sta": 2, "o": 2, "remain": [239.20899987220764, 240, 240, 240], "y": 14, "x": 10, "id": 19}, {"sta": 2, "o": 3, "remain": [239.20899987220764, 240, 240, 240], "y": -1, "x": 10, "id": 19}, {"sta": 2, "o": 0, "remain": [239.20899987220764, 240, 240, 240], "y": 0, "x": 4, "id": 19}, {"sta": 2, "o": 1, "remain": [239.20899987220764, 240, 240, 240], "y": 7, "x": 0, "id": 18}, {"sta": 2, "o": 2, "remain": [239.20899987220764, 240, 240, 240], "y": 13, "x": 7, "id": 18}, {"sta": 2, "o": 3, "remain": [239.20899987220764, 240, 240, 240], "y": -2, "x": 7, "id": 18}, {"sta": 2, "o": 0, "remain": [239.20899987220764, 240, 240, 240], "y": 4, "x": 4, "id": 18}, {"sta": 2, "o": 1, "remain": [239.20899987220764, 240, 240, 240], "y": 4, "x": -1, "id": 17}, {"sta": 2, "o": 2, "remain": [239.20899987220764, 240, 240, 240], "y": 12, "x": 2, "id": 17}, {"sta": 2, "o": 3, "remain": [239.20899987220764, 240, 240, 240], "y": 2, "x": 6, "id": 17}, {"sta": 2, "o": 0, "remain": [239.20899987220764, 240, 240, 240], "y": 7, "x": -1, "id": 17}, {"sta": 2, "o": 1, "remain": [239.20899987220764, 240, 240, 240], "y": 7, "x": 2, "id": 16}, {"sta": 2, "o": 2, "remain": [239.20899987220764, 240, 240, 240], "y": 15, "x": 1, "id": 16}, {"sta": 2, "o": 3, "remain": [239.20899987220764, 240, 240, 240], "y": 4, "x": 4, "id": 16}, {"sta": 2, "o": 0, "remain": [239.20899987220764, 240, 240, 240], "y": 1, "x": 4, "id": 15}, {"sta": 2, "o": 1, "remain": [239.20899987220764, 240, 240, 240], "y": 9, "x": 4, "id": 15}, {"sta": 2, "o": 2, "remain": [239.20899987220764, 240, 240, 240], "y": 10, "x": 7, "id": 15}, {"sta": 2, "o": 3, "remain": [239.20899987220764, 240, 240, 240], "y": -3, "x": 2, "id": 15}, {"sta": 2, "o": 0, "remain": [239.20899987220764, 240, 240, 240], "y": 5, "x": 6, "id": 14}, {"sta": 2, "o": 1, "remain": [239.20899987220764, 240, 240, 240], "y": 7, "x": 9, "id": 14}, {"sta": 2, "o": 2, "remain": [239.20899987220764, 240, 240, 240], "y": 8, "x": 12, "id": 14}, {"sta": 2, "o": 3, "remain": [239.20899987220764, 240, 240, 240], "y": 3, "x": 11, "id": 14}, {"sta": 2, "o": 0, "remain": [239.20899987220764, 240, 240, 240], "y": 12, "x": 1, "id": 13}, {"sta": 2, "o": 1, "remain": [239.20899987220764, 240, 240, 240], "y": 8, "x": 12, "id": 13}, {"sta": 2, "o": 2, "remain": [239.20899987220764, 240, 240, 240], "y": 14, "x": 11, "id": 13}, {"sta": 2, "o": 3, "remain": [239.20899987220764, 240, 240, 240], "y": 3, "x": 10, "id": 13}, {"sta": 4, "o": 0, "remain": [239.20899987220764, 240, 240, 240], "y": 8, "x": 11, "id": 12}, {"sta": 2, "o": 1, "remain": [239.20899987220764, 240, 240, 240], "y": 4, "x": 14, "id": 12}, {"sta": 2, "o": 2, "remain": [239.20899987220764, 240, 240, 240], "y": 13, "x": 13, "id": 12}, {"sta": 2, "o": 3, "remain": [239.20899987220764, 240, 240, 240], "y": 2, "x": 13, "id": 12}, {"sta": 4, "o": 0, "remain": [239.20899987220764, 240, 240, 240], "y": 6, "x": 0, "id": 10}, {"sta": 2, "o": 1, "remain": [239.20899987220764, 240, 240, 240], "y": 9, "x": 15, "id": 10}, {"sta": 7, "o": 2, "remain": [239.20899987220764, 240, 240, 240], "y": 12, "x": 15, "id": 9}, {"sta": 2, "o": 3, "remain": [239.20899987220764, 240, 240, 240], "y": -4, "x": 3, "id": 0}, {"sta": 2, "o": 0, "remain": [239.20899987220764, 240, 240, 240], "y": 12, "x": 0, "id": 9}, {"sta": 7, "o": 1, "remain": [239.20899987220764, 240, 240, 240], "y": 14, "x": 3, "id": 8}, {"sta": 4, "o": 2, "remain": [239.20899987220764, 240, 240, 240], "y": 7, "x": 13, "id": 8}, {"sta": 6, "o": 3, "remain": [239.20899987220764, 240, 240, 240], "y": 1, "x": 1, "id": 2}, {"sta": 0, "o": 0, "remain": [239.20899987220764, 240, 240, 240], "y": -1, "x": 9, "id": 2}, {"sta": 2, "o": 1, "remain": [239.20899987220764, 240, 240, 240], "y": 15, "x": 5, "id": 7}, {"sta": 5, "o": 2, "remain": [239.20899987220764, 240, 240, 240], "y": 4, "x": 15, "id": 7}, {"sta": 4, "o": 3, "remain": [239.20899987220764, 240, 240, 240], "y": 3, "x": 0, "id": 10}, {"sta": 5, "o": 0, "remain": [239.20899987220764, 240, 240, 240], "y": 3, "x": 8, "id": 8}, {"sta": 5, "o": 1, "remain": [239.20899987220764, 240, 240, 240], "y": 15, "x": 10, "id": 9}, {"sta": 4, "o": 2, "remain": [239.20899987220764, 240, 240, 240], "y": 6, "x": 12, "id": 2}, {"sta": -1, "o": 3, "remain": [239.20899987220764, 240, 240, 240], "y": -1, "x": -1, "id": -1}, {"sta": 4, "o": 0, "remain": [239.20899987220764, 240, 240, 240], "y": 2, "x": 11, "id": 7}, {"sta": 2, "o": 1, "remain": [239.20899987220764, 240, 240, 240], "y": 15, "x": 7, "id": 1}, {"sta": 2, "o": 2, "remain": [239.20899987220764, 240, 240, 240], "y": 4, "x": 14, "id": 1}, {"sta": -1, "o": 3, "remain": [239.20899987220764, 240, 240, 240], "y": -1, "x": -1, "id": -1}, {"sta": 6, "o": 0, "remain": [239.20899987220764, 240, 240, 240], "y": 0, "x": 7, "id": 5}, {"sta": 2, "o": 1, "remain": [239.20899987220764, 240, 240, 240], "y": 14, "x": 3, "id": 0}, {"sta": 4, "o": 2, "remain": [239.20899987220764, 240, 240, 240], "y": 2, "x": 11, "id": 3}, {"sta": -1, "o": 3, "remain": [239.20899987220764, 240, 240, 240], "y": -1, "x": -1, "id": -1}, {"sta": 4, "o": 0, "remain": [239.20899987220764, 240, 240, 240], "y": 3, "x": 9, "id": 1}, {"sta": -1, "o": 1, "remain": [239.20899987220764, 240, 240, 240], "y": -1, "x": -1, "id": -1}, {"sta": 2, "o": 2, "remain": [239.20899987220764, 240, 240, 240], "y": 14, "x": 2, "id": 0}, {"sta": -1, "o": 3, "remain": [239.20899987220764, 240, 240, 240], "y": -1, "x": -1, "id": -1}, {"sta": 2, "o": 0, "remain": [239.20899987220764, 240, 240, 240], "y": 11, "x": 2, "id": 0}, {"sta": -1, "o": 1, "remain": [239.20899987220764, 240, 240, 240], "y": -1, "x": -1, "id": -1}, {"sta": -1, "o": 2, "remain": [239.20899987220764, 240, 240, 240], "y": -1, "x": -1, "id": -1}, {"sta": -1, "o": 3, "remain": [239.20899987220764, 240, 240, 240], "y": -1, "x": -1, "id": -1}, {"sta": -1, "o": 0, "remain": [239.20899987220764, 240, 240, 240], "y": -1, "x": -1, "id": -1}, {"sta": -1, "o": 1, "remain": [239.20899987220764, 240, 240, 240], "y": -1, "x": -1, "id": -1}, {"sta": -1, "o": 2, "remain": [239.20899987220764, 240, 240, 240], "y": -1, "x": -1, "id": -1}, {"sta": -1, "o": 3, "remain": [239.20899987220764, 240, 240, 240], "y": -1, "x": -1, "id": -1}, {"sta": -1, "o": 0, "remain": [239.20899987220764, 240, 240, 240], "y": -1, "x": -1, "id": -1}, {"sta": -1, "o": 1, "remain": [239.20899987220764, 240, 240, 240], "y": -1, "x": -1, "id": -1}, {"sta": -1, "o": 2, "remain": [239.20899987220764, 240, 240, 240], "y": -1, "x": -1, "id": -1}, {"sta": -1, "o": 3, "remain": [239.20899987220764, 240, 240, 240], "y": -1, "x": -1, "id": -1}, {"sta": -1, "o": 0, "remain": [239.20899987220764, 240, 240, 240], "y": -1, "x": -1, "id": -1}, {"sta": -1, "o": 1, "remain": [239.20899987220764, 240, 240, 240], "y": -1, "x": -1, "id": -1}, {"sta": -1, "o": 2, "remain": [239.20899987220764, 240, 240, 240], "y": -1, "x": -1, "id": -1}, {"sta": -1, "o": 3, "remain": [239.20899987220764, 240, 240, 240], "y": -1, "x": -1, "id": -1}]';

test = json.loads(tes);

ter = [cell for chess in map(toCell,test) for cell in chess];

